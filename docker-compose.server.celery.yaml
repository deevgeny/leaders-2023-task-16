version: "3.8"

services:
  database:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB_FILE: /run/secrets/db_name
      POSTGRES_USER_FILE: /run/secrets/db_user
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    secrets:
      - db_name
      - db_user
      - db_password
    networks:
      - my_network

  adminer:
    image: adminer
    restart: always
    depends_on:
      - database
    networks:
      - my_network

  redis:
    image: redis:7.0-alpine
    restart: always
    networks:
     - my_network

  backend:
    image: deevgeny/task-16-backend:celery
    restart: always
    volumes:
      - media:/app/media/
      - static:/app/static/
      - ./certbot/certificates/live/:/app/ssl/
    environment:
      DEBUG: 0
      ADMIN_CREDENTIALS_FILE: /run/secrets/admin_credentials
    env_file:
      - ./.env
    secrets:
      - db_name
      - db_user
      - db_password
      - secret_key
      - admin_credentials
    networks:
      - my_network
    depends_on:
      - database
      - redis

  celery:
    image: deevgeny/task-16-backend:celery
    restart: always
    volumes:
      - media:/app/media/
      - static:/app/staic/
      - ./certbot/certificates/live/:/app/ssl/
    environment:
      ADMIN_CREDENTIALS_FILE: /run/secrets/admin_credentials
      DEBUG: 0
      CELERY: 1
    env_file:
      - ./.env
    secrets:
      - db_name
      - db_user
      - db_password
      - secret_key
      - admin_credentials
    networks:
      - web
      - my_network
    depends_on:
      - backend

  frontend:
    image: deevgeny/task-16-frontend:deploy
    networks:
      - my_network
    depends_on:
      - backend

  nginx:
    image: nginx:1.21.3-alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/certificates:/etc/letsencrypt/
      - ./certbot/webroot:/var/www/certbot/
      - static:/app/static/
      - media:/app/media/
    depends_on:
      - frontend
    networks:
      - my_network
      - web
  
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/certificates:/etc/letsencrypt/
      - ./certbot/webroot:/var/www/certbot/
    depends_on:
      - nginx
    command: certonly --webroot -w /var/www/certbot --force-renewal --email {email} -d {domain} --agree-tos

volumes:
  postgres_data:
  static:
  media:

secrets:
  db_name:
    environment: POSTGRES_DB
  db_user:
    environment: POSTGRES_USER
  db_password:
    environment: POSTGRES_PASSWORD
  secret_key:
    environment: SECRET_KEY
  admin_credentials:
    file: ./admin_credentials


networks:
  web:
    internal: false
  my_network:
    internal: true
