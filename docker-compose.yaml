version: '3.9'

services:

  database:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB_FILE: /run/secrets/db_name
      POSTGRES_USER_FILE: /run/secrets/db_user
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    secrets:
      - db_name
      - db_user
      - db_password
  
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - database

  backend:
    build:
      context: ./backend
      args:
        BACKEND_PORT: $BACKEND_PORT
    ports:
      - "$BACKEND_PORT:$BACKEND_PORT"
    restart: always
    volumes:
      - static:/app/static/
      - media:/app/media/
    environment:
      DB_ENGINE: $DB_ENGINE
      DB_HOST: $DB_HOST
      DB_PORT: $DB_PORT
      ADMIN_CREDENTIALS_FILE: /run/secrets/admin_credentials
      DEBUG: 1
      ALLOWED_HOSTS: $ALLOWED_HOSTS
      CSRF_TRUSTED_ORIGINS: $CSRF_TRUSTED_ORIGINS
      CORS_ALLOWED_ORIGINS: $CORS_ALLOWED_ORIGINS
    secrets:
      - db_name
      - db_user
      - db_password
      - secret_key
      - admin_credentials
    depends_on:
      - database
  
  frontend:
    build:
      context: ./frontend2
      args:
        SERVER_PORT: 80
        API_URL: http://localhost:8000/
        API_PREFIX: ""
    ports:
      - "80:80"
    depends_on:
      - backend

volumes:
  postgres_data:
  static:
  media:

secrets:
  db_name:
    environment: POSTGRES_DB
  db_user:
    environment: POSTGRES_USER
  db_password:
    environment: POSTGRES_PASSWORD
  secret_key:
    environment: SECRET_KEY
  admin_credentials:
    file: ./admin_credentials
